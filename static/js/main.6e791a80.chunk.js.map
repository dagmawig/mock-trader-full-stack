{"version":3,"sources":["components/FirebaseConfig.js","components/StateWrap.js","components/Login.js","components/Header.js","components/Home.js","components/Footer.js","components/Search.js","components/History.js","components/Loading.js","components/SignUp.js","components/PassReset.js","App.js","reportWebVitals.js","components/Reducer.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","StateContext","createContext","StateWrap","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Login","dispatch","userID","useState","email","getEmail","password","getPassword","className","alt","src","process","type","size","onChange","e","target","onClick","preventDefault","signInWithEmailAndPassword","then","user","currentUser","emailVerified","localStorage","setItem","uid","window","location","reload","sendEmailVerification","alert","signOut","catch","error","message","to","Header","fund","portfolio","formatNum","x","toFixed","toString","replace","shares","length","reduce","total","share","i","parseFloat","price","reset","Home","watchlist","useEffect","getItem","a","axios","post","res","loadingDisplay","loadUserData","data","history","searchStock","ticker","currentTarget","url","get","searchTicker","includes","toUpperCase","indexOf","cost","averageC","search","plusButtonClass","searchedTicker","averCost","watchlistDiv","map","investingDiv","Footer","Search","getTicker","trade","startTrade","shareBuy","getBuyShare","shareSell","getSellShare","limitPrice","getLimitPrice","limitOrder","getLimitOrder","priceChecked","isLimitPrice","orderChecked","isLimitOrder","split","join","gain","placeholder","onKeyPress","key","id","index","splice","push","newWatchlist","setWatchlist","style","color","visibility","document","getElementById","checked","click","$","modal","backgroundColor","role","data-dismiss","aria-label","aria-hidden","min","disabled","buyTicker","success","sellTicker","History","historyDiv","d","Date","date","getTime","getTimezoneOffset","toDateString","limit","Math","abs","console","log","Loading","display","SignUp","valid","isValid","createUserWithEmailAndPassword","Reset","sendPasswordResetEmail","App","homePage","signUp","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6e791a80.chunk.js","sourcesContent":[" \r\n import firebase from 'firebase';\r\n // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBwnAONdyUlykAZCi8q5EzJWxP5EHxGK3w\",\r\n    authDomain: \"mock-trader.firebaseapp.com\",\r\n    projectId: \"mock-trader\",\r\n    storageBucket: \"mock-trader.appspot.com\",\r\n    messagingSenderId: \"957707573896\",\r\n    appId: \"1:957707573896:web:b77f2a103f2d22f8b41d3d\",\r\n    measurementId: \"G-HKP4CNXBF9\"\r\n  };\r\n\r\n // Initialize Firebase\r\n const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n const auth = firebase.auth();\r\n\r\n export {auth}; \r\n //firebase.analytics();","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n// creating state context to use import and dispatch state values\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateWrap = ({reducer, initialState, children }) => {\r\n    return (\r\n        <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n    );\r\n    \r\n};\r\n\r\n//used to send and receive from data layer\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from './FirebaseConfig';\r\nimport { useStateValue } from './StateWrap';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [{ userID }, dispatch] = useStateValue();\r\n    const [email, getEmail] = useState('');\r\n    const [password, getPassword] = useState('');\r\n\r\n    // method used to sign in existing user. it also checks if email is verified. if not it sends verification email.\r\n    const signIn = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                let user = auth.currentUser;\r\n                if (user.emailVerified) {\r\n\r\n                    localStorage.setItem(\"userID\", user.uid);\r\n\r\n                    dispatch({\r\n                        type: 'SET_USER',\r\n                        userID: user.uid\r\n                    })\r\n\r\n                    window.location.reload();\r\n                }\r\n                else {\r\n                    user.sendEmailVerification();\r\n                    alert(`Email not verified.\\nVerification link sent to ${email}.\\nPlease verify your email.`);\r\n                    auth.signOut();\r\n                }\r\n            }).catch((error) => alert(error.message));\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"login row\">\r\n            <div className=\"login_image col-sm-6 d-none d-sm-block\">\r\n                <img alt=\"login image\" src={process.env.PUBLIC_URL + '/image/login.jpg'} />\r\n            </div>\r\n            <div className=\"login_form col-sm-6\">\r\n\r\n                <form>\r\n                    <h3>Welcome to Mock Trader</h3>\r\n                    <br/>\r\n                    Email<br />\r\n                    <input type=\"email\" size=\"22\" value={email} onChange={(e) => getEmail(e.target.value)} /><br /><br />\r\n                    Password<br />\r\n                    <input type=\"password\" size=\"22\" value={password} onChange={(e) => getPassword(e.target.value)} /><br /><br />\r\n                    <button type=\"submit\" onClick={signIn} className=\"login_signIn btn btn-success\">\r\n                        Sign In <i className=\"fa fa-sign-in\"></i>\r\n                    </button>\r\n                    <br/><br/>\r\n                    <div>\r\n                        <Link to=\"/signup\">\r\n                            <a>New user? Create account here.</a>\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/reset\">\r\n                            <a>Forgot password? Reset password here.</a>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport { useStateValue } from './StateWrap';\r\n\r\nfunction Header() {\r\n\r\n    const [{ fund, portfolio }, dispatch] = useStateValue();\r\n\r\n    //method to format numbers to two decimal digits.\r\n    function formatNum(x) {\r\n        x = x.toFixed(2);\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    // method to rest app state during logout\r\n    function logout() {\r\n        localStorage.setItem(\"userID\", \"\");\r\n\r\n        dispatch({\r\n            type: 'RESET',\r\n            reset: null\r\n        })\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"header container\">\r\n            <div className=\"header_row row\">\r\n                <div className=\"header_cash col-5 col-sm-4\">\r\n                    <div className=\"header_cash_top row\">\r\n                        Buying Power &emsp;<i className=\"fa fa-money\"></i>\r\n                    </div>\r\n                    <div className=\"header_cash_bottom row\">\r\n                        ${(fund)? formatNum(fund): \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"header_stock col-5 col-sm-4\">\r\n                    <div className=\"header_stock_top row\">\r\n                        Investing &emsp;<i className=\"fa fa-line-chart\"></i>\r\n                    </div>\r\n                    <div className=\"header_stock_bottom row\">\r\n                        ${(portfolio.shares.length)? formatNum(portfolio.shares.reduce((total, share, i) => {\r\n                            return total +(share*parseFloat(portfolio.price[i].replace(',', '')));\r\n                        }, 0)): 0}\r\n                    </div>\r\n                </div>\r\n                <div className=\"header_logout col-2\">\r\n                    <button className=\"header_button\" onClick={logout}>\r\n                        <Link to=\"/\">\r\n                            <i className=\"fa fa-power-off fa-2x\" ></i>\r\n                        </Link>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport './Home.css';\r\nimport { useStateValue } from './StateWrap';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [{ watchlist, portfolio }, dispatch] = useStateValue();\r\n\r\n    // hook to load user data from server\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"userID\")) {\r\n\r\n            async function loadUserData() {\r\n                let url = 'https://mock-trader.glitch.me/loadData';\r\n                let res = await axios.post(url, { userID: localStorage.getItem(\"userID\") });\r\n                return res;\r\n            }\r\n\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            loadUserData()\r\n                .then(res => {\r\n                    let data = res.data.data;\r\n                    dispatch({\r\n                        type: \"LOAD_DATA\",\r\n                        data: {\r\n                            fund: data.fund,\r\n                            watchlist: data.watchlist,\r\n                            portfolio: data.portfolio,\r\n                            history: data.history\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'TOGGLE_LOADING',\r\n                        loadingDisplay: 'none'\r\n                    })\r\n                })\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    // method used on investing and watchlist stock buttons. whenever the stocks are clicked they act as search stock function to display detail of stock.\r\n    const searchStock = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const ticker = e.currentTarget.value;\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_LOADING',\r\n            loadingDisplay: 'block'\r\n        })\r\n        async function searchTicker() {\r\n            let url = 'https://mock-trader.glitch.me/getPrice/' + ticker;\r\n            let res = await axios.get(url);\r\n            return res;\r\n        }\r\n        searchTicker()\r\n            .then((res => {\r\n\r\n                if (res.data.price == \"\") { alert(\"No such stock exists!\"); }\r\n                else {\r\n\r\n                    let shares = (portfolio.ticker.includes(ticker.toUpperCase())) ? portfolio.shares[portfolio.ticker.indexOf(ticker.toUpperCase())] : 0;\r\n\r\n                    let cost = (portfolio.ticker.includes(ticker.toUpperCase())) ? portfolio.averageC[portfolio.ticker.indexOf(ticker.toUpperCase())] : 0;\r\n\r\n                    dispatch({\r\n                        type: 'SET_SEARCH',\r\n                        search: {\r\n                            price: res.data.price,\r\n                            plusButtonClass: (!watchlist.ticker.includes(ticker.toUpperCase())) ? 'fa fa-plus-square fa-3x' : 'fa fa-minus-square fa-3x',\r\n                            searchedTicker: ticker.toUpperCase(),\r\n                            shares: shares,\r\n                            averCost: cost\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: 'TOGGLE_LOADING',\r\n                        loadingDisplay: 'none'\r\n                    })\r\n                }\r\n\r\n            }))\r\n    }\r\n\r\n    // method to return a div containing a list of watchlist stockes with their price info loaded from app state \r\n    const watchlistDiv = watchlist.ticker.map((ticker, i) => {\r\n        return (\r\n            <div className=\"home_stock row\" key={i + 'wl'}>\r\n                <button className=\"home_watchlist_button\" value={ticker} onClick={searchStock}>\r\n                    <Link to=\"/search\" className=\"home_watchlist_link\" >\r\n                        <div className=\"home_stock_ticker col-6\">\r\n                            {ticker}\r\n                        </div>\r\n                        <div className=\"home_stock_price col-6\">\r\n                            ${watchlist.price[i]}\r\n                        </div>\r\n                    </Link>\r\n                </button>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    // method to return a div containing a list of investing stockes with their price info loaded from app state \r\n    const investingDiv = portfolio.ticker.map((ticker, i) => {\r\n        return (\r\n            <div className=\"home_stock row\" key={i + 'in'}>\r\n                <button className=\"home_watchlist_button\" value={ticker} onClick={searchStock}>\r\n                    <Link to=\"/search\" className=\"home_watchlist_link\" >\r\n                        <div className=\"home_stock_ticker col-4\">\r\n                            {ticker}\r\n                        </div>\r\n                        <div className=\"home_stock_share col-4\">\r\n                            {portfolio.shares[i]} shares\r\n                        </div>\r\n                        <div className=\"home_stock_price col-4\">\r\n                            ${portfolio.price[i]}\r\n                        </div>\r\n                    </Link>\r\n                </button>\r\n            </div>\r\n        );\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"home container\">\r\n            <div className=\"home_row row\">\r\n                <div className=\"home_investing row\">\r\n                    <div className=\"home_header row\">\r\n                        <div className=\"home_header_title col-6\">\r\n                            Investing\r\n                            </div>\r\n                        <div className=\"home_header_icon col-6\">\r\n                            <i className=\"fa fa-line-chart\"></i>\r\n                        </div>\r\n                    </div>\r\n                    {investingDiv}\r\n                </div>\r\n                <div className=\"home_watchlist row\">\r\n                    <div className=\"home_header row\">\r\n                        <div className=\"home_header_title col-6\">\r\n                            Watchlist\r\n                            </div>\r\n                        <div className=\"home_header_icon col-6\">\r\n                            <i className=\"fa fa-bolt\"></i>\r\n                        </div>\r\n                    </div>\r\n                    {watchlistDiv}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer container\">\r\n            <div className=\"footer_row row\">\r\n                <div className=\"footer_home col-4\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"footer_button\"><i className=\"fa fa-home fa-2x\"></i></button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"footer_search col-4\">\r\n                    <Link to=\"/search\">\r\n                        <button className=\"footer_button\"><i className=\"fa fa-search fa-2x\"></i></button>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className=\"footer_history col-4\">\r\n                    <Link to=\"/history\">\r\n                        <button className=\"footer_button\"><i className=\"fa fa-history fa-2x\"></i></button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport './Search.css';\r\nimport axios from 'axios';\r\nimport { useStateValue } from './StateWrap';\r\n\r\n\r\nfunction Search() {\r\n    // various state variables\r\n    const [ticker, getTicker] = useState('');\r\n    const [{ userID, search, watchlist, fund, portfolio }, dispatch] = useStateValue();\r\n    const [trade, startTrade] = useState(['Trade', 'purple', 'hidden', 'hidden']);\r\n    const [shareBuy, getBuyShare] = useState('');\r\n    const [shareSell, getSellShare] = useState('');\r\n    const [limitPrice, getLimitPrice] = useState('');\r\n    const [limitOrder, getLimitOrder] = useState('');\r\n    const [priceChecked, isLimitPrice] = useState(false);\r\n    const [orderChecked, isLimitOrder] = useState(false);\r\n\r\n    // method to format numbers to two decimal digits\r\n    function formatNum(x) {\r\n        x=parseFloat(x);\r\n        x = x.toFixed(2);\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    // method used to open buy modal\r\n    function openBuy() {\r\n\r\n        // resetting the limitPrice checkbox and the limitPrice input box when reopening modal\r\n        if (document.getElementById('limitPrice').checked) {\r\n            document.getElementById('limitPrice').click();\r\n        }\r\n        if (document.getElementById('bShares').value) {\r\n            document.getElementById('bShares').value = '';\r\n            getBuyShare('');\r\n        }\r\n\r\n        window.$('#buyModal').modal('show');\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_LOADING',\r\n            loadingDisplay: 'block'\r\n        })\r\n\r\n        // retrieving price data and loding it into app state when opening modal\r\n        async function searchTicker() {\r\n            let url = 'https://mock-trader.glitch.me/getPrice/' + search.searchedTicker;\r\n            let res = await axios.get(url);\r\n            return res;\r\n        }\r\n        searchTicker()\r\n            .then((res) => {\r\n\r\n                let shares = (portfolio.ticker.includes(search.searchedTicker.toUpperCase())) ? portfolio.shares[portfolio.ticker.indexOf(search.searchedTicker.toUpperCase())] : 0;\r\n\r\n                let cost = (portfolio.ticker.includes(search.searchedTicker.toUpperCase())) ? portfolio.averageC[portfolio.ticker.indexOf(search.searchedTicker.toUpperCase())] : 0;\r\n\r\n                dispatch({\r\n                    type: 'SET_SEARCH',\r\n                    search: {\r\n                        price: res.data.price,\r\n                        plusButtonClass: (!watchlist.ticker.includes(search.searchedTicker.toUpperCase())) ? 'fa fa-plus-square fa-3x' : 'fa fa-minus-square fa-3x',\r\n                        searchedTicker: search.searchedTicker.toUpperCase(),\r\n                        shares: shares,\r\n                        averCost: cost\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type: 'TOGGLE_LOADING',\r\n                    loadingDisplay: 'none'\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    // method used to open sell modal\r\n    function openSell() {\r\n\r\n        // resetting the limitOrder checkbox and the limitOrder input box when reopening modal\r\n        if (document.getElementById('limitOrder').checked) {\r\n            document.getElementById('limitOrder').click();\r\n        }\r\n        if (document.getElementById('sShares').value) {\r\n            document.getElementById('sShares').value = '';\r\n            getSellShare('');\r\n        }\r\n\r\n        window.$('#sellModal').modal('show');\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_LOADING',\r\n            loadingDisplay: 'block'\r\n        })\r\n\r\n        // retrieving price data and loding it into app state when opening modal\r\n        async function searchTicker() {\r\n            let url = 'https://mock-trader.glitch.me/getPrice/' + search.searchedTicker;\r\n            let res = await axios.get(url);\r\n            return res;\r\n        }\r\n        searchTicker()\r\n            .then((res) => {\r\n                let shares = (portfolio.ticker.includes(search.searchedTicker.toUpperCase())) ? portfolio.shares[portfolio.ticker.indexOf(search.searchedTicker.toUpperCase())] : 0;\r\n\r\n                let cost = (portfolio.ticker.includes(search.searchedTicker.toUpperCase())) ? portfolio.averageC[portfolio.ticker.indexOf(search.searchedTicker.toUpperCase())] : 0;\r\n\r\n                dispatch({\r\n                    type: 'SET_SEARCH',\r\n                    search: {\r\n                        price: res.data.price,\r\n                        plusButtonClass: (!watchlist.ticker.includes(search.searchedTicker.toUpperCase())) ? 'fa fa-plus-square fa-3x' : 'fa fa-minus-square fa-3x',\r\n                        searchedTicker: search.searchedTicker.toUpperCase(),\r\n                        shares: shares,\r\n                        averCost: cost\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type: 'TOGGLE_LOADING',\r\n                    loadingDisplay: 'none'\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    // method used to process buy stock button\r\n    function buyStock(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        if (!shareBuy.split(' ').join('') || parseFloat(shareBuy) <= 0) alert('Enter number of shares more than 0.');\r\n        else {\r\n\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            async function buyTicker() {\r\n                let res = await axios.post('https://mock-trader.glitch.me/buyTicker', { userID: localStorage.getItem(\"userID\"), ticker: search.searchedTicker, shares: parseFloat(shareBuy), limitPrice: parseFloat(limitPrice) })\r\n                return res;\r\n            }\r\n            buyTicker()\r\n                .then(res => {\r\n                    if (!res.data.success) {\r\n                        alert(res.data.message);\r\n\r\n                        dispatch({\r\n                            type: 'TOGGLE_LOADING',\r\n                            loadingDisplay: 'none'\r\n                        })\r\n                    }\r\n                    else {\r\n                        let data = res.data.data\r\n                        alert(data.message);\r\n                        dispatch({\r\n                            type: 'UPDATE_PORTFOLIO',\r\n                            portfolio: data.data.portfolio\r\n                        })\r\n                        dispatch({\r\n                            type: 'UPDATE_FUND',\r\n                            fund: data.data.fund\r\n                        })\r\n                        dispatch({\r\n                            type: 'UPDATE_HISTORY',\r\n                            history: data.data.history\r\n                        })\r\n                        window.$('#buyModal').modal('hide');\r\n                        getTicker(search.searchedTicker);\r\n                        document.getElementById('searchB').click();\r\n\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    // method used to process sell stock button\r\n    function sellStock(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        if (!shareSell.split(' ').join('') || parseFloat(shareSell) <= 0) alert('Enter number of shares more than 0.');\r\n        else if (parseFloat(shareSell) > search.shares) alert(`You only have ${search.shares} shares!`);\r\n        else {\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            async function sellTicker() {\r\n                let res = await axios.post('https://mock-trader.glitch.me/sellTicker', { userID: localStorage.getItem(\"userID\"), ticker: search.searchedTicker, shares: parseFloat(shareSell), limitOrder: parseFloat(limitOrder) })\r\n                return res;\r\n            }\r\n            sellTicker()\r\n                .then(res => {\r\n                    if (!res.data.success) {\r\n                        alert(res.data.message);\r\n\r\n                        dispatch({\r\n                            type: 'TOGGLE_LOADING',\r\n                            loadingDisplay: 'none'\r\n                        })\r\n                    }\r\n                    else {\r\n                        let data = res.data.data;\r\n                        alert(data.message);\r\n                        dispatch({\r\n                            type: 'UPDATE_PORTFOLIO',\r\n                            portfolio: data.data.portfolio\r\n                        })\r\n                        dispatch({\r\n                            type: 'UPDATE_FUND',\r\n                            fund: data.data.fund\r\n                        })\r\n                        dispatch({\r\n                            type: 'UPDATE_HISTORY',\r\n                            history: data.data.history\r\n                        })\r\n                        window.$('#sellModal').modal('hide');\r\n                        getTicker(search.searchedTicker);\r\n                        document.getElementById('searchB').click();\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // method used to update the stock watchlist\r\n    const updateWatchlist = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_LOADING',\r\n            loadingDisplay: 'block'\r\n        })\r\n\r\n        if (!watchlist.ticker.includes(search.searchedTicker.toUpperCase())) {\r\n            watchlist.ticker.push(search.searchedTicker.toUpperCase());\r\n        }\r\n        else {\r\n            let index = watchlist.ticker.indexOf(search.searchedTicker.toUpperCase());\r\n            watchlist.ticker.splice(index, 1);\r\n        }\r\n\r\n        async function setWatchlist() {\r\n            let res = await axios.post('https://mock-trader.glitch.me/updateWatchlist', { userID: localStorage.getItem(\"userID\"), newWatchlist: watchlist })\r\n            return res;\r\n        }\r\n        setWatchlist()\r\n            .then((res) => {\r\n                search.plusButtonClass = (!res.data.watchlist.ticker.includes(search.searchedTicker.toUpperCase())) ? 'fa fa-plus-square fa-3x' : 'fa fa-minus-square fa-3x';\r\n                dispatch({\r\n                    type: 'UPDATE_WATCHLIST',\r\n                    watchlist: res.data.watchlist,\r\n                })\r\n                dispatch({\r\n                    type: 'TOGGLE_LOADING',\r\n                    loadingDisplay: 'none'\r\n                })\r\n            })\r\n    }\r\n\r\n    // method used to handle the search stock button\r\n    const searchStock = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (!ticker.split(' ').join('')) alert('ticker field is empty');\r\n        else {\r\n\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            async function searchTicker() {\r\n                let url = 'https://mock-trader.glitch.me/getPrice/' + ticker;\r\n                let res = await axios.get(url);\r\n                return res;\r\n            }\r\n            searchTicker()\r\n                .then((res => {\r\n\r\n                    if (res.data.price == \"\") {\r\n                        alert(\"No such stock exists!\");\r\n                        dispatch({\r\n                            type: 'TOGGLE_LOADING',\r\n                            loadingDisplay: 'none'\r\n                        })\r\n                    }\r\n                    else {\r\n\r\n                        let shares = (portfolio.ticker.includes(ticker.toUpperCase())) ? portfolio.shares[portfolio.ticker.indexOf(ticker.toUpperCase())] : 0;\r\n\r\n                        let cost = (portfolio.ticker.includes(ticker.toUpperCase())) ? portfolio.averageC[portfolio.ticker.indexOf(ticker.toUpperCase())] : 0;\r\n\r\n                        dispatch({\r\n                            type: 'SET_SEARCH',\r\n                            search: {\r\n                                price: res.data.price,\r\n                                plusButtonClass: (!watchlist.ticker.includes(ticker.toUpperCase())) ? 'fa fa-plus-square fa-3x' : 'fa fa-minus-square fa-3x',\r\n                                searchedTicker: ticker.toUpperCase(),\r\n                                shares: shares,\r\n                                averCost: cost\r\n                            }\r\n                        })\r\n                        dispatch({\r\n                            type: 'TOGGLE_LOADING',\r\n                            loadingDisplay: 'none'\r\n                        })\r\n                        startTrade(['Trade', 'purple', 'hidden', 'hidden']);\r\n                    }\r\n\r\n                }))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function handleEnter(e) {\r\n        if(e.key === 'Enter'){\r\n            searchStock(e);\r\n        }\r\n    }\r\n    // handle color of total return value\r\n    const gain = (parseFloat(search.price.replace(',', ''))/parseFloat(search.averCost.replace(\",\", \"\"))-1 > 0)? \"green\" : ((parseFloat(search.price.replace(',', ''))/parseFloat(search.averCost.replace(\",\", \"\"))-1 < 0)? \"red\" : \"white\");\r\n    // hook to reload data from server and put it into app state.\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"userID\")) {\r\n\r\n            async function loadUserData() {\r\n                let url = 'https://mock-trader.glitch.me/loadData';\r\n                let res = await axios.post(url, { userID: localStorage.getItem(\"userID\") });\r\n                return res;\r\n            }\r\n\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            loadUserData()\r\n                .then(res => {\r\n                    let data = res.data.data;\r\n                    dispatch({\r\n                        type: \"LOAD_DATA\",\r\n                        data: {\r\n                            fund: data.fund,\r\n                            watchlist: data.watchlist,\r\n                            portfolio: data.portfolio,\r\n                            history: data.history\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'TOGGLE_LOADING',\r\n                        loadingDisplay: 'none'\r\n                    })\r\n                })\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"search container\">\r\n            <div className=\"search_row row\">\r\n                <div className=\"search_input_section row\">\r\n                    <input className=\"search_input\" type=\"text\" value={ticker} onChange={(e) => getTicker(e.target.value)} placeholder=\"stock ticker symbol\" onKeyPress={handleEnter}></input><button className=\"search_button\" onClick={searchStock} id=\"searchB\"><i className=\"fa fa-search\" ></i></button>\r\n                </div>\r\n                {(search.searchedTicker) ?\r\n                    (\r\n                        <>\r\n                            <div className=\"search_header row\">\r\n                                <div className=\"search_header_detail col-6\">\r\n                                    <div className=\"search_header_title row\">\r\n                                        {search.searchedTicker}\r\n                                    </div>\r\n                                    <div className=\"search_header_price row\">\r\n                                        ${search.price}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"search_add col-6\">\r\n                                    <button className=\"search_add_button\" onClick={updateWatchlist}>\r\n                                        <i className={search.plusButtonClass}></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"search_position row\">\r\n                                <div className=\"search_position_title col-12\">\r\n                                    POSITION\r\n             </div>\r\n                                <div className=\"search_shares col-6\">\r\n                                    <div className=\"search_shares_top row\">\r\n                                        Shares\r\n                 </div>\r\n                                    <div className=\"search_shares_bottom row\">\r\n                                        {search.shares}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"search_value col-6\">\r\n                                    <div className=\"search_value_top row\">\r\n                                        Market Value\r\n                 </div>\r\n                                    <div className=\"search_value_bottom row\">\r\n                                        ${formatNum(search.shares * parseFloat(search.price.replace(',', '')))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"search_cost col-12\">\r\n                                    <div className=\"search_cost_top row\">\r\n                                        Average Cost\r\n                 </div>\r\n                                    <div className=\"search_cost_bottom row\">\r\n                                        ${formatNum(search.averCost.replace(\",\", \"\"))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"search_return col-6\">\r\n                                    <div className=\"search_return_top row\">\r\n                                        Total Return\r\n                 </div>\r\n                                    <div className=\"search_return_bottom row\" style={{color: gain}}>\r\n                                        ${`${formatNum(search.shares * (parseFloat(search.price.replace(',', '')) - parseFloat(search.averCost.replace(\",\", \"\"))))}`} <br/> {`(${formatNum((parseFloat(search.price.replace(',', ''))/parseFloat(search.averCost.replace(\",\", \"\"))-1)*100)}%)`}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"search_trade col-6\">\r\n                                    <button className=\"search_trade_button search_sell\" style={{ visibility: trade[3] }} onClick={openSell}>\r\n                                        Sell\r\n                             </button>\r\n                                    <button className=\"search_trade_button search_buy\" style={{ visibility: trade[2] }} onClick={openBuy}>\r\n                                        Buy\r\n                             </button>\r\n                                    <button className=\"search_trade_button search_trade_b\" style={{ backgroundColor: trade[1] }} onClick={() => startTrade((trade[0] === 'Trade') ? ['X', 'grey', '', (search.shares) ? '' : 'hidden'] : ['Trade', 'purple', 'hidden', 'hidden'])}>\r\n                                        {trade[0]}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null\r\n                }\r\n\r\n                <div className=\"modal\" role=\"dialog\" id=\"buyModal\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header row\">\r\n                                <h3 className=\"modal-title\">Buy {search.searchedTicker}</h3>\r\n                                <button type=\"button\" className=\"close modal_close_button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" className=\"modal_x\">&times;</span>\r\n                                </button>\r\n                                <p className=\"modal_fund col-12\">${(fund) ? formatNum(fund) : \"\"} available</p>\r\n\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"modal_share\">\r\n                                    <div className=\"modal_share_text\">Number of Shares</div>\r\n                                    <div className=\"modal_share_input\">\r\n                                        <input type=\"number\" placeholder=\"0\" id='bShares' onChange={(e) => getBuyShare(e.target.value)}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal_price\">\r\n                                    <div className=\"modal_price_text\">\r\n                                        Market Price\r\n                                    </div>\r\n                                    <div className=\"modal_price_num\">${search.price}</div>\r\n                                </div>\r\n                                <div className=\"modal_cost\">\r\n                                    <div className=\"modal_cost_text\">Estimated Cost</div>\r\n                                    <div className=\"modal_cost_num\">${(shareBuy) ? formatNum(shareBuy * parseFloat(search.price.replace(',', ''))) : 0}</div>\r\n                                </div>\r\n                                <div className=\"modal_limit\">\r\n                                    <div className=\"modal_limit_check\">\r\n                                        <label >Limit Price</label>\r\n                                        <input type=\"checkbox\" id=\"limitPrice\" onChange={(e) => {\r\n                                            if (!e.target.checked) {\r\n                                                getLimitPrice('');\r\n                                                document.getElementById('ptext').value = '';\r\n                                            }\r\n                                            return isLimitPrice(e.target.checked)\r\n                                        }}></input>\r\n                                    </div>\r\n                                    <div className=\"modal_limit_input\">\r\n                                        <input type=\"number\" min=\"0\" placeholder=\"$\" id='ptext' onChange={(e) => getLimitPrice(e.target.value)} style={{ backgroundColor: !priceChecked ? 'darkgrey' : 'lightgreen' }} disabled={!priceChecked ? true : false}></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={buyStock}>Buy</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal\" role=\"dialog\" id=\"sellModal\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header row\">\r\n                                <h3 className=\"modal-title\">Sell {search.searchedTicker}</h3>\r\n                                <button type=\"button\" className=\"close modal_close_button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" className=\"modal_x\">&times;</span>\r\n                                </button>\r\n                                <p className=\"modal_fund col-12\">{search.shares} shares available</p>\r\n\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"modal_share\">\r\n                                    <div className=\"modal_share_text\">Number of Shares</div>\r\n                                    <div className=\"modal_share_input\">\r\n                                        <input type=\"number\" placeholder=\"0\" id='sShares' onChange={(e) => getSellShare(e.target.value)}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal_price\">\r\n                                    <div className=\"modal_price_text\">\r\n                                        Market Price\r\n                                    </div>\r\n                                    <div className=\"modal_price_num\">${search.price}</div>\r\n                                </div>\r\n                                <div className=\"modal_cost\">\r\n                                    <div className=\"modal_cost_text\">Estimated Credit</div>\r\n                                    <div className=\"modal_cost_num\">${(shareSell) ? formatNum(shareSell * parseFloat(search.price.replace(',', ''))) : 0}</div>\r\n                                </div>\r\n                                <div className=\"modal_limit\">\r\n                                    <div className=\"modal_limit_check\">\r\n                                        <label >Limit Order</label>\r\n                                        <input type=\"checkbox\" id=\"limitOrder\" onChange={(e) => {\r\n                                            if (!e.target.checked) {\r\n                                                getLimitOrder('');\r\n                                                document.getElementById('oText').value = '';\r\n                                            }\r\n                                            return isLimitOrder(e.target.checked)\r\n                                        }} ></input>\r\n                                    </div>\r\n                                    <div className=\"modal_limit_input\">\r\n                                        <input type=\"number\" placeholder=\"$\" id='oText' onChange={(e) => getLimitOrder(e.target.value)} style={{ backgroundColor: !orderChecked ? 'darkgrey' : 'lightgreen' }} disabled={!orderChecked ? true : false}></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={sellStock}>Sell</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useEffect } from 'react';\r\nimport './History.css';\r\nimport { useStateValue } from './StateWrap';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction History() {\r\n\r\n    const [{ history, loadingDisplay }, dispatch] = useStateValue();\r\n\r\n    // method for format numbers to two decimal digits.\r\n    function formatNum(x) {\r\n        x = x.toFixed(2);\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    };\r\n\r\n    // method to loop through the history object and return a list of history divs to display.\r\n    const historyDiv = (history.ticker.length !== 0) ? history.ticker.map((ticker, i) => {\r\n\r\n        let d = new Date(history.date[i]);\r\n\r\n        // changing UTC timezone to western hemsphere\r\n        d = new Date(d.getTime() - ( d.getTimezoneOffset()*60000 )).toDateString();\r\n\r\n        return (\r\n            <div className=\"history_list row\" key={i + \"hist\"}>\r\n                <div className=\"history_list_top row\">\r\n                    <div className=\"history_list_stock col-6\">\r\n                        {ticker}: {history.limit[i]}\r\n                    </div>\r\n                    <div className=\"history_list_price col-6\">\r\n                        {(history.value[i] < 0) ? `-$${formatNum(Math.abs(history.value[i]))}` : `$${formatNum(history.value[i])}`}\r\n                    </div>\r\n                </div>\r\n                <div className=\"history_list_bottom row\">\r\n                    <div className=\"history_list_date col-6\">\r\n                        {d}\r\n                    </div>\r\n                    <div className=\"history_list_value col-6\">\r\n                        {`${history.shares[i]} shares @ $${history.price[i]}`}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }) :\r\n        <div className=\"history_list row\">\r\n           {(loadingDisplay === 'block')? \"\" : <>You Have No History. <br /> Go Make Some!!</>} \r\n        </div>\r\n        ;\r\n\r\n    // hook to reload info from server\r\n    useEffect(() => {\r\n\r\n        console.log(localStorage.getItem(\"userID\"));\r\n\r\n        if (localStorage.getItem(\"userID\")) {\r\n\r\n            async function loadUserData() {\r\n                let url = 'https://mock-trader.glitch.me/loadData';\r\n                console.log(url);\r\n                let res = await axios.post(url, { userID: localStorage.getItem(\"userID\") });\r\n                return res;\r\n            }\r\n\r\n            dispatch({\r\n                type: 'TOGGLE_LOADING',\r\n                loadingDisplay: 'block'\r\n            })\r\n\r\n            loadUserData()\r\n                .then(res => {\r\n                    let data = res.data.data;\r\n                    console.log(data.watchlist, data.portfolio, data.history);\r\n                    dispatch({\r\n                        type: \"LOAD_DATA\",\r\n                        data: {\r\n                            fund: data.fund,\r\n                            watchlist: data.watchlist,\r\n                            portfolio: data.portfolio,\r\n                            history: data.history\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'TOGGLE_LOADING',\r\n                        loadingDisplay: 'none'\r\n                    })\r\n                })\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"history container\">\r\n            <div className=\"history_row row\">\r\n                <div className=\"history_section row\">\r\n                    <div className=\"history_header row\">\r\n                        History\r\n                    </div>\r\n                    {historyDiv}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","import React from 'react';\r\nimport './Loading.css';\r\nimport { useStateValue } from './StateWrap';\r\n\r\n// method that returns a spinning loading sign \r\nfunction Loading() {\r\n    const [{ loadingDisplay }] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"loading\" style={{display: loadingDisplay}}>\r\n            <div className=\"loading_row row\">\r\n                <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw col-12\"></span>\r\n                <div className=\"col-12 text\">Loading . . . </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, { useState } from 'react';\r\nimport './SignUp.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from './FirebaseConfig';\r\n\r\n\r\nfunction SignUp() {\r\n    const [email, getEmail] = useState('');\r\n    const [password, getPassword] = useState('');\r\n    const [valid, isValid] = useState(null);\r\n\r\n    // method to sign up user using firebase authentication method and send email verification link\r\n    const signUp = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(valid) return;\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                let user = auth.currentUser;\r\n                user.sendEmailVerification()\r\n                    .then(function () {\r\n                        auth.signOut();\r\n                        alert(`Verification link sent to ${email}. \\n Please click on the link to verify your email and log into your acount.`);\r\n                        isValid(true);\r\n                        document.getElementById(\"signup\").click();\r\n                    }).catch(function (e) {\r\n                        alert(e);\r\n                    });\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup row\">\r\n            <div className=\"login_image col-sm-6 d-none d-sm-block\">\r\n                <img alt=\"login image\" src={process.env.PUBLIC_URL + '/image/login.jpg'} />\r\n            </div>\r\n            <div className=\"login_form col-sm-6\">\r\n                <form>\r\n                    <h4>Create Account on Mock Trader</h4>\r\n                    <br />\r\n                Email<br />\r\n                    <input type=\"email\" size=\"22\" value={email} onChange={(e) => getEmail(e.target.value)} /><br /><br />\r\n                Password<br />\r\n                    <input type=\"password\" size=\"22\" value={password} onChange={(e) => getPassword(e.target.value)} /><br /><br />\r\n                    <button onClick={signUp} className=\"login_signUp btn btn-success\">\r\n                        <Link to={(valid) ? \"/\" : \"/signup\"} className=\"signUp_link\" id=\"signup\">\r\n                            Sign Up <i className=\"fa fa-user-plus\"></i>\r\n                        </Link>\r\n                    </button>\r\n                    <br /><br />\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <a>Existing user? Sign in here.</a>\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/reset\">\r\n                            <a>Forgot password? Reset password here.</a>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport './PassReset.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from './FirebaseConfig';\r\n\r\n\r\nfunction Reset() {\r\n\r\n    const [email, getEmail] = useState('');\r\n\r\n    // function that handles password reset action.\r\n    const resetPass = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        auth.sendPasswordResetEmail(email).then(() => {\r\n            alert(`Password reset link sent to ${email}.`);\r\n            getEmail(\"\");\r\n            document.getElementById(\"login_link\").click();\r\n        }).catch(function (error) {\r\n            alert(error.message);\r\n        })\r\n            .catch((error) => {\r\n                alert(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset row\">\r\n            <div className=\"reset_image col-sm-6 d-none d-sm-block\">\r\n                <img alt=\"reset image\" src={process.env.PUBLIC_URL + '/image/login.jpg'} />\r\n            </div>\r\n            <div className=\"reset_form col-sm-6\">\r\n\r\n                <form>\r\n                    <h4>Mock Trader Password Reset</h4>\r\n                    <br />\r\n                    Email<br />\r\n                    <input type=\"email\" size=\"22\" value={email} onChange={(e) => getEmail(e.target.value)} /><br /><br />\r\n                    <button type=\"submit\" onClick={resetPass} className=\"reset_pass btn btn-success\">\r\n                        Reset Password <i className=\"fa fa-key\"></i>\r\n                    </button>\r\n                    <br /><br />\r\n                    <div>\r\n                        <Link to=\"/signup\">\r\n                            <a>New user? Create account here.</a>\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <a id=\"login_link\">Remember Password? Sign in here.</a>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;","import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport Search from './components/Search';\nimport History from './components/History';\nimport Loading from './components/Loading';\nimport { useEffect } from 'react';\nimport SignUp from './components/SignUp';\nimport Reset from './components/PassReset';\n\nfunction App() {\n\n  let homePage;\n\n  if (localStorage.getItem(\"userID\")) {\n    homePage = (\n      <>\n        <Header />\n        <Loading />\n        <Home />\n        <Footer />\n      </>\n    )\n  }\n  else {\n    homePage = (\n      <>\n        <Loading />\n        <Login />\n      </>\n    )\n  }\n\n  let signUp;\n\n  if (localStorage.getItem(\"userID\")) {\n    signUp = (\n      <>\n        <Header />\n        <Loading />\n        <Home />\n        <Footer />\n      </>\n    )\n  }\n  else {\n    signUp = (\n      <>\n        <Loading />\n        <SignUp />\n      </>\n    )\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/search\">\n            {(localStorage.getItem(\"userID\")) ?\n              <>\n                <Header />\n                <Loading />\n                <Search />\n                <Footer />\n              </> :\n              <div>Page access not authorized!</div>\n            }\n          </Route>\n          <Route path=\"/history\">\n            {(localStorage.getItem(\"userID\")) ?\n              <>\n                <Header />\n                <Loading />\n                <History />\n                <Footer />\n              </> :\n              <div>Page access not authorized!</div>\n            }\n          </Route>\n          <Route path=\"/empty\">\n            <div>\n              Verification link sent to your email! <br />Please click on link to verify email....then <button><Link to=\"/\">Login</Link></button>\n            </div>\n          </Route>\n          <Route path=\"/signup\">\n            {signUp}\n          </Route>\n          <Route path=\"/reset\">\n            <Reset />\n          </Route>\n          <Route path=\"/\">\n            {homePage}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// initial state of app\r\nexport const initialState = {\r\n    userID: '',\r\n    loadingDisplay: 'none',\r\n    fund: \"\",\r\n    search: { price: 0, plusButtonClass: '', searchedTicker: '', shares: 0, averCost: 0 },\r\n    watchlist: {\r\n        ticker: [],\r\n        price: [],\r\n    },\r\n    portfolio: {\r\n        ticker: [],\r\n        price: [],\r\n        shares: [],\r\n        averageC: [],\r\n    },\r\n    history: {\r\n        ticker: [],\r\n        price: [],\r\n        shares: [],\r\n        value: [],\r\n        limit: [],\r\n        date: []\r\n    }\r\n};\r\n\r\n// reducer to defind different actions used by dispatch\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"RESET\":\r\n            return initialState;\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state, userID: action.userID\r\n            };\r\n        case \"LOAD_DATA\":\r\n            return {\r\n                ...state, fund: action.data.fund, watchlist: action.data.watchlist, portfolio: action.data.portfolio, history: action.data.history\r\n            };\r\n        case \"SET_SEARCH\":\r\n            return {\r\n                ...state, search: action.search\r\n            };\r\n        case \"UPDATE_FUND\":\r\n            return {\r\n                ...state, fund: action.fund\r\n            };\r\n        case \"UPDATE_WATCHLIST\":\r\n            return {\r\n                ...state, watchlist: action.watchlist\r\n            };\r\n        case \"UPDATE_PORTFOLIO\":\r\n            return {\r\n                ...state, portfolio: action.portfolio\r\n            };\r\n        case \"UPDATE_HISTORY\":\r\n            return {\r\n                ...state, history: action.history\r\n            };\r\n        case \"TOGGLE_LOADING\":\r\n            return {\r\n                ...state, loadingDisplay: action.loadingDisplay\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateWrap } from './components/StateWrap';\nimport reducer, { initialState } from './components/Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateWrap initialState={initialState} reducer={reducer}>\n      <App />\n    </StateWrap>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}